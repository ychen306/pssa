; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: %opt %s -S -passes=global-slp -do-versioning | FileCheck %s
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

@a = external global i32
@c = external global ptr

define i32 @d(ptr %b) #0 {
; CHECK-LABEL: @d(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load ptr, ptr @c, align 8
; CHECK-NEXT:    store i8 0, ptr [[TMP0]], align 1
; CHECK-NEXT:    [[TMP1:%.*]] = load i8, ptr @a, align 1
; CHECK-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds i8, ptr [[TMP0]], i64 1
; CHECK-NEXT:    store i8 [[TMP1]], ptr [[ARRAYIDX2]], align 1
; CHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr [[B:%.*]], align 4
; CHECK-NEXT:    br label [[FOR_BODY_PREHEADER:%.*]]
; CHECK:       for.body.preheader:
; CHECK-NEXT:    br label [[FOR_BODY:%.*]]
; CHECK:       for.body:
; CHECK-NEXT:    [[G_016:%.*]] = phi i32 [ [[TMP2]], [[FOR_BODY_PREHEADER]] ], [ [[DEC:%.*]], [[FOR_BODY]] ]
; CHECK-NEXT:    [[F_015:%.*]] = phi ptr [ [[TMP0]], [[FOR_BODY_PREHEADER]] ], [ [[ADD_PTR:%.*]], [[FOR_BODY]] ]
; CHECK-NEXT:    [[TMP3:%.*]] = load i8, ptr @a, align 4
; CHECK-NEXT:    store i8 [[TMP3]], ptr [[F_015]], align 1
; CHECK-NEXT:    [[TMP4:%.*]] = load i8, ptr @a, align 1
; CHECK-NEXT:    [[ARRAYIDX6:%.*]] = getelementptr inbounds i8, ptr [[F_015]], i64 1
; CHECK-NEXT:    store i8 [[TMP4]], ptr [[ARRAYIDX6]], align 1
; CHECK-NEXT:    [[ADD_PTR]] = getelementptr inbounds i8, ptr [[F_015]], i64 3
; CHECK-NEXT:    [[DEC]] = add nsw i32 [[G_016]], 1
; CHECK-NEXT:    [[TOBOOL_NOT:%.*]] = icmp eq i32 [[G_016]], 0
; CHECK-NEXT:    br i1 [[TOBOOL_NOT]], label [[FOR_END_LOOPEXIT:%.*]], label [[FOR_BODY]]
; CHECK:       for.end.loopexit:
; CHECK-NEXT:    ret i32 0
;
entry:
  %0 = load ptr, ptr @c, align 8
  store i8 0, ptr %0, align 1
  %1 = load i8, ptr @a, align 1
  %arrayidx2 = getelementptr inbounds i8, ptr %0, i64 1
  store i8 %1, ptr %arrayidx2, align 1
  %2 = load i32, ptr %b, align 4
  br label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %g.016 = phi i32 [ %dec, %for.body ], [ %2, %for.body.preheader ]
  %f.015 = phi ptr [ %add.ptr, %for.body ], [ %0, %for.body.preheader ]
  %3 = load i8, ptr @a, align 4
  store i8 %3, ptr %f.015, align 1
  %4 = load i8, ptr @a, align 1
  %arrayidx6 = getelementptr inbounds i8, ptr %f.015, i64 1
  store i8 %4, ptr %arrayidx6, align 1
  %add.ptr = getelementptr inbounds i8, ptr %f.015, i64 3
  %dec = add nsw i32 %g.016, 1
  %tobool.not = icmp eq i32 %g.016, 0
  br i1 %tobool.not, label %for.end.loopexit, label %for.body

for.end.loopexit:                                 ; preds = %for.body
  ret i32 0
}

attributes #0 = { "target-cpu"="icelake-client" }
