; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: %opt %s -S -passes=global-slp -do-versioning | FileCheck %s
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

@b = external global ptr

define i32 @i(ptr %e.promoted) {
; CHECK-LABEL: @i(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load ptr, ptr @b, align 8
; CHECK-NEXT:    store float 0.000000e+00, ptr [[TMP0]], align 4
; CHECK-NEXT:    br label [[WHILE_BODY_LR_PH:%.*]]
; CHECK:       while.body.lr.ph:
; CHECK-NEXT:    [[ARRAYIDX8:%.*]] = getelementptr inbounds float, ptr [[TMP0]], i64 1
; CHECK-NEXT:    [[ARRAYIDX11:%.*]] = getelementptr inbounds float, ptr [[TMP0]], i64 2
; CHECK-NEXT:    br i1 false, label [[WHILE_BODY_US_PREHEADER:%.*]], label [[WHILE_BODY_PREHEADER:%.*]]
; CHECK:       while.body.preheader:
; CHECK-NEXT:    br label [[WHILE_BODY:%.*]]
; CHECK:       while.body.us.preheader:
; CHECK-NEXT:    br label [[WHILE_BODY_US:%.*]]
; CHECK:       while.body.us:
; CHECK-NEXT:    [[INCDEC_PTR2124_US:%.*]] = phi ptr [ [[E_PROMOTED:%.*]], [[WHILE_BODY_US_PREHEADER]] ], [ [[ARRAYIDX7_US:%.*]], [[WHILE_BODY_US]] ]
; CHECK-NEXT:    [[ARRAYIDX7_US]] = getelementptr inbounds float, ptr [[INCDEC_PTR2124_US]], i64 1
; CHECK-NEXT:    store float 1.000000e+00, ptr [[ARRAYIDX8]], align 4
; CHECK-NEXT:    [[TMP1:%.*]] = load float, ptr [[INCDEC_PTR2124_US]], align 4
; CHECK-NEXT:    store float 2.000000e+00, ptr [[ARRAYIDX11]], align 4
; CHECK-NEXT:    br i1 false, label [[WHILE_COND_WHILE_END_CRIT_EDGE_LOOPEXIT:%.*]], label [[WHILE_BODY_US]]
; CHECK:       while.body:
; CHECK-NEXT:    store float 3.000000e+00, ptr [[TMP0]], align 4
; CHECK-NEXT:    store float 4.000000e+00, ptr [[ARRAYIDX8]], align 4
; CHECK-NEXT:    store float 5.000000e+00, ptr [[ARRAYIDX11]], align 4
; CHECK-NEXT:    br i1 false, label [[WHILE_COND_WHILE_END_CRIT_EDGE_LOOPEXIT33:%.*]], label [[WHILE_BODY]]
; CHECK:       while.cond.while.end_crit_edge.loopexit:
; CHECK-NEXT:    ret i32 0
; CHECK:       while.cond.while.end_crit_edge.loopexit33:
; CHECK-NEXT:    ret i32 0
;
entry:
  %0 = load ptr, ptr @b, align 8
  store float 0.000000e+00, ptr %0, align 4
  br label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %arrayidx8 = getelementptr inbounds float, ptr %0, i64 1
  %arrayidx11 = getelementptr inbounds float, ptr %0, i64 2
  br i1 false, label %while.body.us.preheader, label %while.body.preheader

while.body.preheader:                             ; preds = %while.body.lr.ph
  br label %while.body

while.body.us.preheader:                          ; preds = %while.body.lr.ph
  br label %while.body.us

while.body.us:                                    ; preds = %while.body.us, %while.body.us.preheader
  %incdec.ptr2124.us = phi ptr [ %arrayidx7.us, %while.body.us ], [ %e.promoted, %while.body.us.preheader ]
  %arrayidx7.us = getelementptr inbounds float, ptr %incdec.ptr2124.us, i64 1
  store float 1.000000e+00, ptr %arrayidx8, align 4
  %1 = load float, ptr %incdec.ptr2124.us, align 4
  store float 2.000000e+00, ptr %arrayidx11, align 4
  br i1 false, label %while.cond.while.end_crit_edge.loopexit, label %while.body.us

while.body:                                       ; preds = %while.body, %while.body.preheader
  store float 3.000000e+00, ptr %0, align 4
  store float 4.000000e+00, ptr %arrayidx8, align 4
  store float 5.000000e+00, ptr %arrayidx11, align 4
  br i1 false, label %while.cond.while.end_crit_edge.loopexit33, label %while.body

while.cond.while.end_crit_edge.loopexit:          ; preds = %while.body.us
  ret i32 0

while.cond.while.end_crit_edge.loopexit33:        ; preds = %while.body
  ret i32 0
}
