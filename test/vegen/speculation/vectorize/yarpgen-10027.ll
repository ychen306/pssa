; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: %opt %s -S -passes=global-slp -do-versioning | FileCheck %s
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

@c = external global [0 x i16]

; CHECK: store <8 x i16>

define void @_Z1gPbPA2_A2_jPA12_A2_A2_s(ptr %h, ptr %i) {
for.cond5.preheader.lr.ph:
  br label %for.cond5.preheader

for.cond.cleanup.loopexit:                        ; preds = %for.cond.cleanup3
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit
  ret void

for.cond5.preheader:                              ; preds = %for.cond.cleanup7.split, %for.cond5.preheader.lr.ph
  br label %for.cond5.preheader.new

for.cond5.preheader.new:                          ; preds = %for.cond5.preheader
  br label %for.body8

for.cond.cleanup3.loopexit:                       ; preds = %for.cond.cleanup7.split
  br label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond.cleanup3.loopexit
  br label %for.cond.cleanup.loopexit

for.cond.cleanup7.split.unr-lcssa.loopexit:       ; preds = %for.inc40.loopexit.7
  br label %for.cond.cleanup7.split

for.cond.cleanup7.split:                          ; preds = %for.cond.cleanup7.split.unr-lcssa.loopexit
  br i1 false, label %for.cond.cleanup3.loopexit, label %for.cond5.preheader

for.body8:                                        ; preds = %for.inc40.loopexit.7, %for.cond5.preheader.new
  br label %for.cond23.preheader

for.cond23.preheader:                             ; preds = %for.body8
  store i16 0, ptr @c, align 2
  br label %for.cond23.preheader.1

for.cond23.preheader.1:                           ; preds = %for.cond23.preheader
  store i16 0, ptr getelementptr inbounds ([0 x i16], ptr @c, i64 0, i64 1), align 2
  br label %for.cond23.preheader.2

for.cond23.preheader.2:                           ; preds = %for.cond23.preheader.1
  store i16 0, ptr getelementptr inbounds ([0 x i16], ptr @c, i64 0, i64 2), align 2
  br label %for.cond23.preheader.3

for.cond23.preheader.3:                           ; preds = %for.cond23.preheader.2
  store i16 0, ptr getelementptr inbounds ([0 x i16], ptr @c, i64 0, i64 3), align 2
  br label %for.cond23.preheader.4

for.cond23.preheader.4:                           ; preds = %for.cond23.preheader.3
  store i16 0, ptr getelementptr inbounds ([0 x i16], ptr @c, i64 0, i64 4), align 2
  br label %for.cond23.preheader.5

for.cond23.preheader.5:                           ; preds = %for.cond23.preheader.4
  store i16 0, ptr getelementptr inbounds ([0 x i16], ptr @c, i64 0, i64 5), align 2
  br i1 false, label %for.body27.preheader.5, label %for.inc40.loopexit.5

for.body27.preheader.5:                           ; preds = %for.cond23.preheader.5
  br label %for.body27.5

for.body27.5:                                     ; preds = %for.body27.5, %for.body27.preheader.5
  store i8 0, ptr %i, align 1
  store i8 0, ptr %i, align 1
  br i1 false, label %for.inc40.loopexit.loopexit.5, label %for.body27.5

for.inc40.loopexit.loopexit.5:                    ; preds = %for.body27.5
  br label %for.inc40.loopexit.5

for.inc40.loopexit.5:                             ; preds = %for.inc40.loopexit.loopexit.5, %for.cond23.preheader.5
  %0 = load i32, ptr %h, align 4
  %tobool16.not.6 = icmp eq i32 %0, 0
  br i1 %tobool16.not.6, label %for.cond23.preheader.6, label %for.body12.preheader.6

for.body12.preheader.6:                           ; preds = %for.inc40.loopexit.5
  %1 = load i8, ptr %h, align 1
  %tobool18.le.6 = zext i8 %1 to i16
  br label %for.cond23.preheader.6

for.cond23.preheader.6:                           ; preds = %for.body12.preheader.6, %for.inc40.loopexit.5
  %.us-phi.6 = phi i16 [ %tobool18.le.6, %for.body12.preheader.6 ], [ 0, %for.inc40.loopexit.5 ]
  store i16 %.us-phi.6, ptr getelementptr inbounds ([0 x i16], ptr @c, i64 0, i64 6), align 2
  br label %for.cond23.preheader.7

for.cond23.preheader.7:                           ; preds = %for.cond23.preheader.6
  store i16 0, ptr getelementptr inbounds ([0 x i16], ptr @c, i64 0, i64 7), align 2
  br label %for.inc40.loopexit.7

for.inc40.loopexit.7:                             ; preds = %for.cond23.preheader.7
  br i1 false, label %for.cond.cleanup7.split.unr-lcssa.loopexit, label %for.body8
}
