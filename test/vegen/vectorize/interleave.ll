; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: %opt %s -S -passes=global-slp | FileCheck %s
; ModuleID = 'interleave.c'
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

@a = local_unnamed_addr global [2 x i32] zeroinitializer, align 4
@c = local_unnamed_addr global [4 x i32] zeroinitializer, align 16
@b = local_unnamed_addr global [2 x i32] zeroinitializer, align 4

; Function Attrs: mustprogress nofree norecurse nosync nounwind ssp willreturn uwtable
define void @foo() local_unnamed_addr #0 {
; CHECK-LABEL: @foo(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[DOTVEC:%.*]] = load <2 x i32>, ptr @a, align 4
; CHECK-NEXT:    [[DOTVEC1:%.*]] = load <2 x i32>, ptr @b, align 4
; CHECK-NEXT:    [[TMP0:%.*]] = shufflevector <2 x i32> [[DOTVEC]], <2 x i32> undef, <4 x i32> <i32 0, i32 undef, i32 1, i32 undef>
; CHECK-NEXT:    [[TMP1:%.*]] = shufflevector <2 x i32> [[DOTVEC1]], <2 x i32> undef, <4 x i32> <i32 undef, i32 0, i32 undef, i32 1>
; CHECK-NEXT:    [[TMP2:%.*]] = shufflevector <4 x i32> [[TMP0]], <4 x i32> [[TMP1]], <4 x i32> <i32 0, i32 5, i32 2, i32 7>
; CHECK-NEXT:    store <4 x i32> [[TMP2]], ptr @c, align 16
; CHECK-NEXT:    ret void
;
entry:
  %0 = load i32, ptr @a, align 4, !tbaa !5
  store i32 %0, ptr @c, align 16, !tbaa !5
  %1 = load i32, ptr @b, align 4, !tbaa !5
  store i32 %1, ptr getelementptr inbounds ([4 x i32], ptr @c, i64 0, i64 1), align 4, !tbaa !5
  %2 = load i32, ptr getelementptr inbounds ([2 x i32], ptr @a, i64 0, i64 1), align 4, !tbaa !5
  store i32 %2, ptr getelementptr inbounds ([4 x i32], ptr @c, i64 0, i64 2), align 8, !tbaa !5
  %3 = load i32, ptr getelementptr inbounds ([2 x i32], ptr @b, i64 0, i64 1), align 4, !tbaa !5
  store i32 %3, ptr getelementptr inbounds ([4 x i32], ptr @c, i64 0, i64 3), align 4, !tbaa !5
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind ssp willreturn uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 15.0.0 (https://github.com/llvm/llvm-project 12f9c7b27063a4a487621f48c167e4f88de6d297)"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
